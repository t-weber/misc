func test_conversion()
{
	int i = 1234;

	scalar s;
	s = 987.654;

	vec 4 v;
	v = [1., 2., 3., 4.];

	mat 3 2 M;
	M = [5., 6., 7.,  8., 9., 10.];

	putstr(i);
	putstr(s);
	putstr(v);
	putstr(M);
}


func test_loop()
{
	int i = 0;

	loop i<16 do
		i = i+1;

	putint(i);
}


func test_args(int i, scalar j, scalar k)
{
	putint(i);
	putflt(j);
	putflt(k);
}


func test_vec(vec 3 a)
{
	vec 3 v, w, x, b;
	v = [5., 5., 5.];
	w = [1., 2., 3.];
	b = a;

	x = v - w;

	putstr(x);
	putstr(x + b);

	putstr(v*w);

	putstr(x[1]);
}


func test_mat()
{
	mat 3 3 M = [0., 1., 0.,  1., 0., 0.,  0., 0., 1.];
	vec 3 v = [1., 5., 9.];

	putstr(M*v);
	putstr(M*M);

	putstr(M[2,2]);

	putstr(M);
	M[2,2] = 123;
	putstr(M);
	putstr(M[2,2] = 987);
	putstr(M);

	#putstr(ext_determinant(M, 3, 3));
}


func test_str(str s)
{
	putstr(s);
	putstr(s[1]);

	str i, j, k, l;

	i = "Test 123";
	j = i;
	j = j + ", 987";
	k = ", ";
	l = i + k + j;

	putstr(i);
	putstr(j);
	putstr(k);

	putstr(i + k + j);
	putstr(l);

	putint(strlen(j));
}


func test_norm()
{
	putstr( |-123.4| );
	putstr( |-987| );
}


func start()
{
	putstr("----- conversions -----");
	test_conversion();

	putstr("----- loops -----");
	test_loop();

	putstr("----- args -----");
	test_args(12, 34., 56.);

	putstr("----- vectors -----");
	vec 3 v;
	v = [5., 6., 7.];
	test_vec(v);

	putstr("----- matrices -----");
	test_mat();

	putstr("----- strings -----");
	test_str("XYZ");

	putstr("----- norm -----");
	test_norm();
}
